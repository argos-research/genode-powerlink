#
# Build
#

set use_usb_driver [expr [have_spec omap4] || [have_spec arndale] || [have_spec rpi] || [have_spec odroid_u3]]
set use_nic_driver [expr !$use_usb_driver && ![have_spec imx53] && ![have_spec hw_odroid_xu] && ![have_spec linux] && ![have_spec hw_wand_quad]]

set skip_run 0
if {[info exists ::env(ON_JENKINS)]} {set skip_run 1}

if {[expr !$use_usb_driver && !$use_nic_driver]} {
	puts "\n Run script is not supported on this platform. \n"; exit 0 }

set build_components {
	core init openpowerlink sched_controller sync
	drivers/timer
	drivers/nic
}

#	drivers/rtc

lappend_if $use_usb_driver              build_components drivers/usb
lappend_if [have_spec gpio]             build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes" prio_levels="128">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
		<service name="TRACE"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="sched_controller">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Sched_controller"/> </provides>
	</start>
	<start name="sync">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="sync"/> </provides>
	</start>
	<start name="openpowerlink">
                <resource name="RAM" quantum="256M"/>
                <provides><service name="openpowerlink"/></provides>
                <config>
	             <libc rtc="/dev/rtc" cwd="/dev/rtc" stdin="/dev/rtc" stdout="/dev/rtc" stderr="/dev/rtc">
	                 <vfs>
	                     <dir name="dev">
	                         <inline name="rtc">2018-02-21 09:00
	                         </inline>
	                     </dir>
	                 </vfs>
	             </libc>
                </config>
    </start>}

append_if [have_spec gpio] config {
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
		<config/>
	</start>}

append_if $use_usb_driver config {
	<start name="usb_drv">
		<resource name="RAM" quantum="12M"/>
		<provides>
			<service name="Nic"/>
		</provides>
		<config uhci="yes" ehci="yes" xhci="yes">
			<nic mac="02:00:00:00:01:01"/>
		</config>
	</start>}

append_platform_drv_config

append_if $use_nic_driver config {
	<start name="nic_drv">
		<resource name="RAM" quantum="40M"/>
		<provides><service name="Nic"/></provides>
	</start>}

append config {
</config>
}

install_config $config

#
# Boot image
#

append qemu_args "-net vde,sock=/tmp/switch1 -net nic,macaddr=02:00:00:00:08:12 "
append_if [expr [have_spec zybo]] qemu_args "-net nic,model=cadence_gem -serial null -serial mon:stdio "
append_if [expr ![have_spec zybo]] qemu_args "-net nic,model=lan9118 "

set boot_modules {
	core init openpowerlink sched_controller sync
	timer
	ld.lib.so
	libc.lib.so
	stdcxx.lib.so
	libm.lib.so
	lwip.lib.so
	pthread.lib.so
	openpowerlink.lib.so
}

#	rtc_drv


# platform-specific modules
lappend_if $use_usb_driver              boot_modules usb_drv
lappend_if $use_nic_driver              boot_modules nic_drv
lappend_if [have_spec gpio]             boot_modules gpio_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -nographic -smp 2"

if {$skip_run == 0} {run_genode_until forever}




#       <start name="rtc_drv">
#                <resource name="RAM" quantum="1M"/>
#                <provides> <service name="Rtc"/> </provides>
#        </start>

